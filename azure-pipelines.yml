name: Weather_app

trigger:
    - main

stages:
    - stage: Build_and_Test
      displayName: Build and Test
      jobs:
        - job: build_and_test
          displayName: Build and Test
          steps:
              - task: UsePythonVersion@0
                inputs:
                    versionSpec: 3.11
                displayName: Use Python 3.11
              - script: |
                    python -m venv .venv
                    source .venv/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                displayName: 'Installing dependencies'    
              - script: |
                  echo "Running script..."
                  source .venv/bin/activate
                  python main.py
                displayName: 'Run main.py'
                env:
                  API_KEY: $(API_KEY)
              - script: |
                  echo "Running tests..."
                  source .venv/bin/activate
                  pytest
                displayName: "Run pytest"
                env:
                  API_KEY: $(API_KEY)  
    - stage: Docker_build_and_push
      displayName: Docker build and Push
      jobs:
        - job: docker_build_and_push
          displayName: Docker build and push
          steps:
            - task: Docker@2
              inputs:
                containerRegistry: 'mgConn'
                command: 'login'
            - task: Docker@2
              inputs:
                containerRegistry: 'mgConn'
                repository: 'weather-app'
                command: 'buildAndPush'
                Dockerfile: '**/Dockerfile'
                tags: '$(Build.BuildId)'
    - stage: Security_Scan
      displayName: Security scan
      jobs:
        - job: security_scan
          displayName: Security Scan
          steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'armConn'
              scriptType: 'pscore'
              scriptLocation: 'scriptPath'
              scriptPath: '$(Build.SourcesDirectory)/scripts/ImageScanSummaryAssessmentGate.ps1'
              arguments: '-registryName mgConn -repository weather-app -tag $(Build.BuildId)'
            